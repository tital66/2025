qapractical 1


Create table which imports a csv file tips.csv and perform the following queries:
1. print the highest bill
select * from 'tipsdb.tipstab' where bill = (select max(bill) from 'tipsdb.tipstab');

2.Print the number of smokers and non smokers
select smoker, count (*) from 'tipsdb.tipstab' group by smoker;

3.print the number of males and females
select gender, count(*) from 'tipsdb.tipstab' group by gender;

4.print the second highest tip
select min(tip) from 'tipsdb.tipstab' where tip in (select tip from 'tipsdb.tipstab' order by tip desc limit 2);

5.print the records of customers who are males and smokers
select * from 'tipsdb.tipstab' where gender = 'Male' and smoker=true;

6.print the second highest tip


7.Order the customer records by tip in the descending order
select * from 'tipsdb.tipstab' order by tip desc;

8.print the days when the customer paid the highest tip
select day, tip from 'tipsdb.tipstab' where tip=(select max(tip) from 'tipsdb.tipstab');

9.print the highest tip on the weekends
select day, max(tip) as 'highest tip' from 'tip.csv' where day in ('Sun','Sat') group by day;

10.print the days when the number of customers were more than 50.
select day from 'tips.csv' group by day having count(*)>50;

11.print the customers who are either females or non smokers
select * from 'tips.csv' where gender='Female' or smoker=false;

12.create tables student, course and teacher as enclosed in the assignment and perform queries on them.

create table student(
  roll int,
  name strint,
  address string,
  course_no string,
  semester string,
  grade string);

create table course(
  course_no string,
  course_name string,
  major string
);

create table teacher(
  emp_id int,
  emp_name string,
  course_no string,
  phone_no int,
  qualification string,
  salary int, doj string
);

insert into student values
(10,'Somya','MG road Goregaon',SC01,'5','A');

insert into course values
('SC01','BSc','Maths');

insert into teacher values
(10001,'Mr. Gomes', 'SC01',9082472646,'MSc','22-mar-2019');


13.Print the records of the students whose names start with S.
select * from student where name like 'S%';

14.print the students details where the names are at least 10 characters.
select * from student where lenght(name)=10;

15.print the student details who are enrolled in the course BSc
select roll,name,course_name from student inner join course on student.course_no=course.course_no
where course_name like '%BSc%';

16.display the details of teachers who earn a salary more than 50000.
select * from teacher where salary > 500000;


practical 2 hadoop

hadoop version

1.1. Start Linux terminal in GCP.
pwd

1.2. Print your Hadoop version.
hadoop version

1.3. Print the nodes which are running.
hdfs dfsadmin -report

1.4. Create a directory BIGDATA-rollno with your roll no  in HDFS.

hadoop fs -mkdir /BIGDATA-18
hadoop fs -ls /

1.5. Create a sub directory MYROLL_ROLLNO under BIGDATA-rollno

hadoop fs -mkdir /BIGDATA-18/MYROLL_ROLLNO
hadoop fs -ls /
hadoop fs -ls -R /

1.6. Create an empty file PRACTICAL-rollno.txt with your roll no
hadoop fs -touchz /BIGDATA-18/MYROLL_MYROLLNO/PRACTICAL-18.txt

1.7. Create a file called “Q1_PRACTICAL.txt” in
home\username\MYROLL_ROLLNO. Replace ROLLNO with your roll number. Create the following
content: “Hadoop 
hadoop fs -appentToFile /../../../Q1_Practical.txt /../../../Practicl-18.txt
cat Practical-18.txt

 
1.8. Append the content from the local file “Q1_PRACTICAL.txt” to PRACTICAL-rollno.txt in HDFS.
hadoop fs -appendToFile /../../Q1_PRACTICAL.txt /BIGDATA-18/MYROLL_18/Practical-18.txt
hadoop fs -cat /BIGDATA-18/MYROLL_18/Practical-18.txt



1.9. View the content of HDFS with subfolders and files.
hadoop fs -ls -R /


1.10.Rename the existing file to “assignment-DS.txt”
hadoop fs -mv /BIGDATA-18/MYROLL_18/assigment-1.txt /BIGDATA-18/MYROLL_18/MYROLL_18/assigment-DS.txt

hadoop fs -ls -R /BIGDATA-18/MYROLL_18/assignment-DS.txt

hadoop fs -ls -R /BIGDATA-18


create database tips;
create table tips(
total_bill int, 
tip int,
sex varchar(10),
smoker varchar(5),
day varchar(15),
time varchar(20),
size int
);

use tips;
select * from tips_dataset;

select * from tips_dataset where total_bill= (select max(total_bill) from tips_dataset);

select smoker , count(*) from tips_dataset group by smoker;

select gender, count(*) from tips_dataset group by gender;

select tip from tips_dataset order by tip desc limit 1 offset 1;

select * from tips_dataset where gender="Male" and smoker="yes";

select * from tips_dataset order by tip desc;

select max(tip) from tips_dataset;

select * from tips_dataset where sex = "FeMale" and smoker = "no"; 

select day, tip from tips_dataset where tip = (select max(tip) from tips_dataset);

select day , max(tip) as "highest tip" from tips_dataset where day in ("Sun","sat") group by day;

select day from tips_dataset group by day having count(*)>50;



create database tips11;

use tips11;

create table student(
roll_no int,
name varchar(30),
address varchar(100),
course_no varchar(10)
);

select * from student;

create table course(
course_no varchar(10),
course_name varchar(20),
major varchar(30)
);

create table teacher(
emp_id int,
emp_name varchar(20),
course_no varchar(10),
phn_no int,
qual varchar(15),
salary int,
doj varchar(10)
);

insert into student values(
10, "Sonia", "MG road Goregaon", "SC01");

insert into student values(
30, "Annie", "Saki Naka", "SC02");


insert into student values(
40, "Shruti", "Kalyan", "SC03");

insert into course values(
"SC01", "BSC", "Chemistry");

insert into course values(
"SC02", "BSC CS", "Computer Science");

insert into course values(
"SC03", "Bsc", "Maths");

insert into teacher values(
1001, "Mr Srinivasan", "SC01", 987743332, "MSC", 55000, "22-03-2019");

insert into teacher values(
1002, "Mr Cool", "SC02", 324567732, "DR", 200000, "25-04-2024");

insert into teacher values(
1003, "Mr Mustafa", "SC03", 356988292, "12 Fail", 500000, "24-07-2009");

select * from student where name like "S%";

select * from student where name like "S_____";

select * from student where length(name)<=10;

select roll_no, name, course_name from student inner join course 
on student.course_no = course.course_no
where course_name like "BSC%";

select * from teacher where salary between 40000 and 60000;

select roll_no, name from student where course_no like "SC01" or course_no like "SC02" or course_no like "SC03";

select * from student where address is null;

select * from student teacher where emp_name like "Mr%";

select * from student teacher where address like "%Goregaon%";

select * from student teacher where course_no not like "SC01" and course_no not like "SC02";

select name, emp_name from teacher inner join student 
on teacher.course_no=student.course_no
where name like "S%";




hadoop -version

start-dfs.cmd

jps (if asked)

hadoop fs -mkdir /Bigdata-21

hadoop fs -ls /
 
hadoop fs -ls -R /

hadoop fs -mkdir /Bigdata-21/MYROLL_NO

hadoop fs -touchz /Bigdata-21/MYROLL_NO/Prac_21.txt

hadoop fs -put /"C://Given Text path"/Bigdata-21/MYROLL_NO/Prac_21.txt

hadoop fs -cat /Bigdata-21/MYROLL_NO/Prac_21.txt/Friend.txt

hadoop fs -appendToFile /"C://Given Text path" /Bigdata-21

hadoop fs -mv /Bigdata-21/MYROLL_NO /Bigdata-21/Annie_T

hadoop fs -ls -R /




Practical-3

spark-shell

val rdd_data=sc.textFile("C:/Downloads/friend_07.txt")

rdd_data.collect()

rdd_data.collect()(1)

rdd_data.getNumPartitions

val rdd_data=sc.textFile("D:/Downloads/friend_07.txt",3)

rdd_data.glom().collect()(0)

for(i<-rdd_data.collect())println(i)

rdd_data.collect()

val rdd2=rdd_data.flatMap(x=>x.split(" "))

rdd2.collect()

rdd2.getNumPartitions

rdd2.glom().collect()(0)

val rdd3=rdd2.map(x=>(x,1))

rdd3.collect()

val rdd4=rdd3.groupByKey()

rdd4.collect()

val rdd5=rdd3.reduceByKey((x,y)=>(x+y))

rdd5.collect()

val friend=spark.read.text("D:/Downloads/friend_07.txt")

friend.show()














